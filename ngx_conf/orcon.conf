lua_shared_dict motan_client 20m;

init_by_lua_block {
    ---require 'init'
    motan_client = require 'motan.client'
    local service_path = "/media/psf/g/idevz/code/www/vanilla/framework/motan-service"
    local sys_conf_files = {
        'globalcontext',
    }
    motan_client.init(service_path, sys_conf_files)
}

init_worker_by_lua_block {
    motan_client.init_worker()
}

server {
    server_name orcon.idevz.com 127.0.0.1;
    lua_code_cache off;
    root /media/psf/g/idevz/code/www/vanilla/orcon;
    listen 9880;
    set $APP_NAME 'orcon';
    set $VANILLA_VERSION '0_1_0_rc7';
    set $VANILLA_ROOT '/media/psf/g/idevz/code/www/vanilla/framework';
    set $template_root '';
    set $va_cache_status '';
    set $VA_DEV on;

    location /static {
        access_log  off;
        alias /media/psf/g/idevz/code/www/vanilla/orcon/pub/static;
        expires     max;
    }

    location = /favicon.ico {
        access_log  off;
        root /media/psf/g/idevz/code/www/vanilla/orcon/pub/;
        expires     max;
    }

    # Access log with buffer, or disable it completetely if unneeded
    #access_log logs/vanilla-access.log combined buffer=16k;
    # access_log off;

    # Error log
    error_log logs/vanilla-error.log;
    #error_log logs/vanilla-error.log debug;

    access_by_lua_block {
        motan_client.access()
    }

    # Va runtime
    location / {
        #content_by_lua_file $document_root/pub/index.lua;
        content_by_lua_block {
            motan_client.content()
        }
    }
}
